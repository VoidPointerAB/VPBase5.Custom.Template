
/*═══════════════════════════════════════════════════════════════════════════════════════════╗
║ READONLY SAMPLE: CustomSample_MainMenuLayer
╟────────────────────────────────────────────────────────────────────────────────────────────╢
║ Do NOT edit this file in your custom project.
║ When starting a new custom project, copy this file and modify your copy.
║ Update CustomStartupInstruction.cs so that it refers to your copy instead of this sample.
╚═══════════════════════════════════════════════════════════════════════════════════════════*/

using Microsoft.AspNetCore.Mvc;
using VPBase.Custom.Core.Definitions;
using VPBase.Shared.Core.Definitions;
using VPBase.Shared.Server.Helpers;
using VPBase.Shared.Server.Services.Menu;

namespace VPBase.Custom.Server.Configuration.MenuLayers
{
    public class CustomSample_MainMenuLayer : MenuLayerBase
    {
        public override string LayerHandle => "CUSTOM_MAIN";
        public override double LayerOrder => 11;
        
        public override bool IsApplicableForMenuIdentifier(string menuIdentifier)
        {
            return menuIdentifier == "MAIN";
        }

        public override void Apply(SubMenu rootNode, IUrlHelper urlHelper)
        {
            // Do this if you want to clear all menu items added by preceding layers.
            rootNode.ClearChildren();  

            // A menu link at root level using action and a custom icon
            rootNode.AddLink("Home", urlHelper.Action("SampleIndex", "Home", new { Area = "Custom" }), icon:"fa-th-large");

            // An external link with target and custom icon 
            rootNode.AddLink("Void Pointer", "https://voidpointer.se", target: "blank", icon: "fa-external-link");

            // A sub menu
            var animals = rootNode.AddSubMenu("Animals");
            animals.AddLink("Monkey", "https://en.wikipedia.org/wiki/Monkey");
            animals.AddLink("Olm", "https://en.wikipedia.org/wiki/Olm");

            // Adding another level to the previously added sub menu, using custom sorting order.
            var cats = animals.AddSubMenu("Cats");
            cats.AddLink("Sphynx", "https://en.wikipedia.org/wiki/Sphynx_cat", sortOrder: 4);
            cats.AddLink("Siamese", "https://en.wikipedia.org/wiki/Siamese_cat", sortOrder: 3.98);

            // A link that is visible based on policy
            rootNode.AddLink("Policy", "#").Policy(CustomCoreAppConfigDefinition.PolicyName_VP_Template_Mvc );

            // A link that does not require authentication
            rootNode.AddLink("About us", "#").DoNotRequireAuthentication();

            // A link that is visible for UNauthenticated users ONLY
            rootNode.AddLink("How to register", "#").UnauthenticatedUsersOnly();

            if (urlHelper.ActionContext != null && urlHelper.ActionContext.HttpContext != null)
            {
                var httpContext = urlHelper.ActionContext.HttpContext;
                var exampleSettingValue = httpContext.GetSettingStringValue(CustomSampleSettingsDefinition.CustomSample.ExampleSetting.Key);

                rootNode.AddLink(exampleSettingValue, "#").DoNotRequireAuthentication();
            }
        }
    }
}

