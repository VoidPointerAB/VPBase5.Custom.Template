/*═══════════════════════════════════════════════════════════════════════════════════════════╗
║ READONLY SAMPLE: CustomSampleAuthInMemoryTestData
╟────────────────────────────────────────────────────────────────────────────────────────────╢
║ Do NOT edit this file in your custom project.
║ When starting a new custom project, copy this file and name the copy "CustomAuthInMemoryTestData".
║ Insert your custom project´s dependencies into that copy.
║ Update CustomStartupInstruction.cs so that it refers to your copy instead of this sample.
╚═══════════════════════════════════════════════════════════════════════════════════════════*/

using System.Reflection;
using VPBase.Auth.Contract.Models;
using VPBase.Shared.Core.Configuration;
using VPBase.Shared.Core.Helpers;
using VPBase.Shared.Core.Models.Auth.InMemory;

namespace VPBase.Custom.Core.Definitions
{
    public class CustomSampleAuthInMemoryTestData : IAuthInMemoryTestData
    {
        public const string UserId_SampleUser = "VPBase_Auth_User_TESTCUSTOM9999";
        public const string UserId_SampleApplicationAdmin = "VPBase_Auth_User_TESTCUSTOM9998";
        public const string UserId_SampleSuperAdmin = "VPBase_Auth_User_TESTCUSTOM9997";

        private IAuthInMemoryAppBaseData _authInMemoryAppBaseData;

        private AddUpdateAuthInMemoryUserModel _userSampleUser;
        private AddUpdateAuthInMemoryUserModel _userSampleApplicationAdmin;
        private AddUpdateAuthInMemoryUserModel _userSampleSuperAdmin;

        #region IConfigSortable

        public string GetModuleName()
        {
            return ConfigModuleConstants.Custom;
        }

        public string GetName()
        {
            return MethodBase.GetCurrentMethod().DeclaringType.Name;
        }

        public double GetSortOrder()
        {
            return 10;       // Sortorder should be 10 - 49 in Base Custom implementations.
        }

        #endregion

        public void Init(IAuthInMemoryAppBaseData authInMemoryAppBaseData)
        {
            _authInMemoryAppBaseData = authInMemoryAppBaseData;
        }

        // The Auth-Matrix in the Test Code -> Activities and connected Roles !!!!
        public List<AddUpdateAuthInMemoryActivityRolesModel> ActivityRolesGet()
        {
            var addUpdateAuthInMemoryActivityRoles = new List<AddUpdateAuthInMemoryActivityRolesModel>
            {
                new AddUpdateAuthInMemoryActivityRolesModel(CustomCoreAppConfigDefinition.Activity_VP_Template_Mvc.ActivityId,
                new[] 
                { 
                    CustomSampleAppConfigDefinition.RoleCustomSampleUser.RoleId, 
                    CustomSampleAppConfigDefinition.RoleCustomSampleApplicationAdmin.RoleId,
                    CustomSampleAppConfigDefinition.RoleCustomSampleSuperAdmin.RoleId
                }),

                new AddUpdateAuthInMemoryActivityRolesModel(CustomCoreAppConfigDefinition.Activity_VP_Template_SimpleMvc.ActivityId,
                new[]
                {
                    CustomSampleAppConfigDefinition.RoleCustomSampleSuperAdmin.RoleId
                }),
            };

            return addUpdateAuthInMemoryActivityRoles;
        }

        public List<AddUpdateAuthInMemoryUserModel> UsersGet()
        {
            var addUpdateAuthInMemoryUsers = new List<AddUpdateAuthInMemoryUserModel>
            {
                UserSampleUser,
                UserSampleApplicationAdmin,
                UserSampleSuperAdmin
            };

            return addUpdateAuthInMemoryUsers;
        }

        public static AddUpdateAuthInMemoryRoleModel GetRole_CustomSampleUser()
        {
            return new AddUpdateAuthInMemoryRoleModel
            {
                Id = CustomSampleAppConfigDefinition.RoleCustomSampleUser.RoleId,
                Name = CustomSampleAppConfigDefinition.RoleCustomSampleUser.Name
            };
        }

        public static AddUpdateAuthInMemoryRoleModel GetRole_CustomSampleApplicationAdmin()
        {
            return new AddUpdateAuthInMemoryRoleModel
            {
                Id = CustomSampleAppConfigDefinition.RoleCustomSampleApplicationAdmin.RoleId,
                Name = CustomSampleAppConfigDefinition.RoleCustomSampleApplicationAdmin.Name,
            };
        }

        public static AddUpdateAuthInMemoryRoleModel GetRole_CustomSampleSuperAdmin()
        {
            return new AddUpdateAuthInMemoryRoleModel
            {
                Id = CustomSampleAppConfigDefinition.RoleCustomSampleSuperAdmin.RoleId,
                Name = CustomSampleAppConfigDefinition.RoleCustomSampleSuperAdmin.Name,
            };
        }

        public AddUpdateAuthInMemoryUserModel UserSampleUser
        {
            get
            {
                if (_userSampleUser == null)
                {                 
                    var customFields = new List<AuthSharedUserCustomFieldWithStringValueModel>()
                    {
                        SharedAuthTestDataHelper.CreateCustomFieldValue_User_TEST_Id("SampleUserTest_1234"),
                    };

                    var attributes = new UserTemplateAttributes
                    {
                        Roles = new List<AddUpdateAuthInMemoryRoleModel>() { GetRole_CustomSampleUser(), SharedAuthTestDataHelper.GetRole_Developer() },  // Custom and one Base Role (Developer)
                        TenantIds = new List<AuthTenantModel>() { SharedAuthTestDataHelper.GetTenant_Test() },
                        CustomFields = customFields,
                    };

                    var displayName = $"{ConfigModuleConstants.Custom} Sample User";
                    _userSampleUser = SharedAuthTestDataHelper.CreateTemplateUser(userNames: ["customuser"], displayName: displayName, attributes: attributes, userId: UserId_SampleUser);

                    _authInMemoryAppBaseData.AddBaseBehaviourToUser(_userSampleUser);
                }

                return _userSampleUser;
            }
        }

        public AddUpdateAuthInMemoryUserModel UserSampleApplicationAdmin
        {
            get
            {
                if (_userSampleApplicationAdmin == null)
                {
                    var customFields = new List<AuthSharedUserCustomFieldWithStringValueModel>()
                    {
                         // Two custom fields connected to user entity and one for each tenant
                        SharedAuthTestDataHelper.CreateCustomFieldValue_User_TEST_Id("SampleApplicationAdminTest_2345"),   
                        SharedAuthTestDataHelper.CreateCustomFieldValue_User_DEMO_Id("SampleApplicationAdminDemo_9874"),
                    };

                    var attributes = new UserTemplateAttributes
                    {
                        Roles = new List<AddUpdateAuthInMemoryRoleModel>() { GetRole_CustomSampleApplicationAdmin() },
                        TenantIds = new List<AuthTenantModel>() { SharedAuthTestDataHelper.GetTenant_Test(), SharedAuthTestDataHelper.GetTenant_Demo() },   // Two tenants
                        CustomFields = customFields,
                    };

                    var displayName = $"{ConfigModuleConstants.Custom} Sample Application Admin";
                    _userSampleApplicationAdmin = SharedAuthTestDataHelper.CreateTemplateUser(userNames: ["customadmin"], displayName: displayName, attributes: attributes, userId: UserId_SampleApplicationAdmin);

                    _authInMemoryAppBaseData.AddBaseBehaviourToUser(_userSampleApplicationAdmin);
                }
                return _userSampleApplicationAdmin;
            }            
        }

        public AddUpdateAuthInMemoryUserModel UserSampleSuperAdmin
        {
            get
            {
                if (_userSampleSuperAdmin == null)
                {
                    var customFields = new List<AuthSharedUserCustomFieldWithStringValueModel>()
                    {
                        SharedAuthTestDataHelper.CreateCustomFieldValue_User_VP_Id("SampleSuperAdminVP_1234"),
                        SharedAuthTestDataHelper.CreateCustomFieldValue_User_TEST_Id("SampleSuperAdminTest_2345"),
                        SharedAuthTestDataHelper.CreateCustomFieldValue_User_DEMO_Id("SampleSuperAdminDemo_3456"),
                    };

                    var attributes = new UserTemplateAttributes
                    {
                        Roles = _authInMemoryAppBaseData.RolesGetAll(),
                        Claims = _authInMemoryAppBaseData.GetAllActivitiesRoleClaims(),
                        TenantIds = SharedAuthTestDataHelper.GetTenant_All(),
                    };

                    var displayName = $"{ConfigModuleConstants.Custom} Sample Super Admin";
                    _userSampleSuperAdmin = SharedAuthTestDataHelper.CreateTemplateUser(userNames: ["customsuperadmin"], displayName: displayName, attributes: attributes, userId: UserId_SampleSuperAdmin);

                    _authInMemoryAppBaseData.AddBaseBehaviourToUser(_userSampleSuperAdmin);
                }
                return _userSampleSuperAdmin;
            }
        }

        public List<AuthCustomFieldModel> UserCustomFieldsGet(string tenantId)
        {
            return _authInMemoryAppBaseData.UserCustomFieldsGetAll(tenantId);
        }
    }
}
